version: '3.9'

services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: sgc_db
      POSTGRES_USER: sgc_user
      POSTGRES_PASSWORD: sgc_pass
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    command: postgres -c password_encryption=md5
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sgc_user -d sgc_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - monitoring

  pgbouncer:
    image: edoburu/pgbouncer
    restart: always
    ports:
      - "6432:6432"
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: sgc_user
      DB_PASSWORD: sgc_pass
      DB_NAME: sgc_db
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 100
      DEFAULT_POOL_SIZE: 20
    networks:
      - monitoring

  web:
    build: .
    command: >
      sh -c "
      echo 'üïê Waiting for DB...' &&
      until pg_isready -h pgbouncer -p 5432 -U sgc_user; do sleep 1; done &&
      echo '‚úÖ DB is ready, applying migrations...' &&
      python manage.py migrate &&
      echo 'üå± Running seed data...' &&
      python manage.py runscript seed_data &&
      echo 'üöÄ Starting server...' &&
      python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      pgbouncer:
        condition: service_started
    environment:
      PYTHONUNBUFFERED: 1
      DEBUG: "1"
      DATABASE_URL: postgres://sgc_user:sgc_pass@pgbouncer:5432/sgc_db
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - monitoring

  cadvisor:
    image: zcube/cadvisor:latest
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

volumes:
  postgres_data:
  grafana_data:


networks:
  monitoring:
